name: release

on:
  push:
    branches: [master]
    tags: ["v*.*.*"]
  schedule:
    - cron: "0 13 * * 1"

env:
  PLATFORMS: linux/amd64,linux/arm/v7,linux/arm/v6,linux/arm64 #,linux/ppc64le
  IMAGENAME: speedtest
  DEFAULT_TAG: "latest"
  # needed secrets:
  # DOCKERHUB_USER  - Docker Hub user
  # DOCKERHUB_TOKEN - Docker Hub token

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Prepare Tags
        id: prep
        shell: bash
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            if [[ $VERSION =~ ^v([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$ ]]; then
              MAJOR="${BASH_REMATCH[1]}"
              MINOR="${BASH_REMATCH[2]}"
              PATCH="${BASH_REMATCH[3]}"
          
              TAGS=("${{ env.IMAGENAME }}:latest" \
                "${{ env.IMAGENAME }}:${MAJOR}" \
                "${{ env.IMAGENAME }}:${MAJOR}.${MINOR}" \
                "${{ env.IMAGENAME }}:${MAJOR}.${MINOR}.${PATCH}")
            else
              TAGS=("${{ env.IMAGENAME }}:${VERSION}")
            fi
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            TAGS=("${{ env.IMAGENAME }}:latest")
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            TAGS=("${{ env.IMAGENAME }}:pr-${PR_NUMBER}")
          fi
          TAGS=$({ IFS=","; echo "${TAGS[*]/#/${{ secrets.DOCKERHUB_USER }}/}","${TAGS[*]/#/ghcr.io/${{ github.repository_owner }}/}"; })
          echo TAGS ${TAGS}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.4.1

      - name: Login to Docker Hub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          file: ./container/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

